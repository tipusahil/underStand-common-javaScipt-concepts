// ЁЯФН JavaScript Closure тАУ A to Z ржмрж╛ржВрж▓рж╛ ржмрзНржпрж╛ржЦрзНржпрж╛
// Closure рж╣рж▓рзЛ JavaScript-ржПрж░ ржЕржирзНржпрждржо ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг ржПржХржЯрж┐ ржХржирж╕рзЗржкрзНржЯ, ржпрж╛ ржЕржирзЗржХ рж╕ржорзЯ ржмрзБржЭрждрзЗ ржХржарж┐ржи ржоржирзЗ рж╣рзЯред ржХрж┐ржирзНрждрзБ ржпржжрж┐ ржмрзБржЭрждрзЗ ржкрж╛рж░рзЛ, рждрж╛рж╣рж▓рзЗ JavaScript-ржПрж░ рж╕рзНржХрзЛржк (Scope) ржПржмржВ ржлрж╛ржВрж╢ржирзЗрж░ ржкрж╛ржУрзЯрж╛рж░ ржмрзБржЭрждрзЗ ржкрж╛рж░ржмрзЗред ЁЯЪА

// ЁЯУМ Closure ржХрзА?
// Closure рж╣рж▓ ржПржоржи ржПржХржЯрж┐ ржлрж╛ржВрж╢ржи, ржпрзЗржЯрж┐ рждрж╛рж░ ржкрзНржпрж╛рж░рзЗржирзНржЯ ржлрж╛ржВрж╢ржирзЗрж░ ржнрзЗрж░рж┐рзЯрзЗржмрж▓ ржУ рж╕рзНржХрзЛржк ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕ ржХрж░рждрзЗ ржкрж╛рж░рзЗ, ржПржоржиржХрж┐ ржкрзНржпрж╛рж░рзЗржирзНржЯ ржлрж╛ржВрж╢ржи ржПржХрзНрж╕рж┐ржХрж┐ржЙрж╢ржи рж╢рзЗрж╖ рж╣рзЯрзЗ ржЧрзЗрж▓рзЗржУ!

// ЁЯУМ рж╕рж╣ржЬ ржнрж╛рж╖рж╛рзЯ Closure:
// тЬЕ ржПржХржЯрж┐ ржлрж╛ржВрж╢ржи рждрж╛рж░ ржмрж╛ржЗрж░рзЗ ржерж╛ржХрж╛ ржнрзЗрж░рж┐рзЯрзЗржмрж▓ ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕ ржХрж░рждрзЗ ржкрж╛рж░рж▓рзЗ рж╕рзЗржЯрж╛ржХрзЗ Closure ржмрж▓рзЗред
// тЬЕ ржпржжрж┐ ржХрзЛржирзЛ ржлрж╛ржВрж╢ржи ржЕржирзНржп ржПржХржЯрж┐ ржлрж╛ржВрж╢ржирзЗрж░ ржнрзЗрждрж░рзЗ ржерж╛ржХрзЗ, рждрж╛рж╣рж▓рзЗ ржЗржиржирж╛рж░ ржлрж╛ржВрж╢ржи ржЖржЙржЯрж╛рж░ ржлрж╛ржВрж╢ржирзЗрж░ ржнрзЗрж░рж┐рзЯрзЗржмрж▓ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ ржкрж╛рж░рзЗред

// ЁЯОп Closure-ржПрж░ рж╕рж╣ржЬ ржЙржжрж╛рж╣рж░ржг:

function outerFunction() {
    let outerVariable = "ржЖржорж┐ ржмрж╛ржЗрж░рзЗ ржЖржЫрж┐!"; // ржЖржЙржЯрж╛рж░ ржлрж╛ржВрж╢ржирзЗрж░ ржнрзЗрж░рж┐рзЯрзЗржмрж▓

    function innerFunction() {
        console.log(outerVariable); // ржЗржиржирж╛рж░ ржлрж╛ржВрж╢ржи ржЖржЙржЯрж╛рж░ ржлрж╛ржВрж╢ржирзЗрж░ ржнрзЗрж░рж┐рзЯрзЗржмрж▓ ржмрзНржпржмрж╣рж╛рж░ ржХрж░ржЫрзЗ
    }

    return innerFunction;
}

const myClosure = outerFunction(); // outerFunction рж░рж╛ржи рж╣рж▓рзЗржУ рждрж╛рж░ ржнрзЗрждрж░рзЗрж░ ржбрж╛ржЯрж╛ ржорзЗржорзЛрж░рж┐рждрзЗ ржерж╛ржХрзЗ
myClosure(); // Output: "ржЖржорж┐ ржмрж╛ржЗрж░рзЗ ржЖржЫрж┐!"
// ЁЯСЙ ржПржЦрж╛ржирзЗ innerFunction() ржЖржЙржЯрж╛рж░ ржлрж╛ржВрж╢ржирзЗрж░ outerVariable ржмрзНржпржмрж╣рж╛рж░ ржХрж░ржЫрзЗ, ржпржжрж┐ржУ outerFunction() ржПржХрзНрж╕рж┐ржХрж┐ржЙрж╢ржи рж╢рзЗрж╖ рж╣рзЯрзЗ ржЧрзЗржЫрзЗ!
// ЁЯСЙ ржПржЯрж╛ржЗ Closure! ЁЯШ▓

// ЁЯУМ ржХрзЗржи Closure ржжрж░ржХрж╛рж░ рж╣рзЯ?
// ЁЯФ╣ ржбрж╛ржЯрж╛ ржкрзНрж░рж╛ржЗржнрзЗржЯ рж░рж╛ржЦрждрзЗ: ржХрж┐ржЫрзБ ржнрзНржпрж╛рж▓рзБ private рж░рзЗржЦрзЗ рж╕рзЗржЯрж╛ржХрзЗ protect ржХрж░рж╛ ржпрж╛рзЯред
// ЁЯФ╣ State Maintain ржХрж░рждрзЗ: ржпржЦржи ржЪрж╛ржЗ ржпрзЗ ржПржХржЯрж┐ ржнрзНржпрж╛рж░рж┐рзЯрзЗржмрж▓ ржорзБржЫрзЗ ржирж╛ ржпрж╛ржХ, рждржЦржи ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рзЯред
// ЁЯФ╣ JavaScript-ржПрж░ Callbacks, Event Listeners, SetTimeout ржП ржмрзНржпржмрж╣рзГржд рж╣рзЯред

// ЁЯОп Real-Life Example (Closure ржжрж┐рзЯрзЗ Counter ржмрж╛ржирж╛ржирзЛ)

function counter() {
    let count = 0; // Private variable

    return function () {
        count++;
        console.log(`Current Count: ${count}`);
    };
}

const increment = counter();
increment(); // Output: Current Count: 1
increment(); // Output: Current Count: 2
increment(); // Output: Current Count: 3
// ЁЯСЙ ржПржЦрж╛ржирзЗ count ржнрзЗрж░рж┐рзЯрзЗржмрж▓ ржмрж╛ржЗрж░рзЗ ржерзЗржХрзЗ ржПржХрзНрж╕рзЗрж╕ ржХрж░рж╛ ржпрж╛ржЪрзНржЫрзЗ ржирж╛, ржХрж┐ржирзНрждрзБ increment() ржХрж▓ ржХрж░рж▓рзЗ рждрж╛ ржЖржкржбрзЗржЯ рж╣ржЪрзНржЫрзЗ!
// ЁЯСЙ ржПржЯрж┐ржЗ Closure-ржПрж░ ржкрж╛ржУрзЯрж╛рж░! ЁЯЪА

// ЁЯФН Closure-ржПрж░ ржмрзНржпржмрж╣рж╛рж░ ржХрзЛржерж╛рзЯ рж╣рзЯ?
// тЬЕ Module Pattern (Private Data Store ржХрж░рж╛рж░ ржЬржирзНржп)
// тЬЕ Event Listeners (ржбрж╛ржЯрж╛ ржзрж░рзЗ рж░рж╛ржЦрж╛рж░ ржЬржирзНржп)
// тЬЕ setTimeout & setInterval-ржПрж░ ржоржзрзНржпрзЗ
// тЬЕ Factory Functions

// ЁЯУМ Closure + setTimeout() Example:

function delayedMessage(message, delay) {
    return function () {
        setTimeout(() => {
            console.log(message);
        }, delay);
    };
}

const showMessage = delayedMessage("Hello, Closure!", 2000);
showMessage(); // 2 рж╕рзЗржХрзЗржирзНржб ржкрж░рзЗ ржжрзЗржЦрж╛ржмрзЗ: "Hello, Closure!"
// ЁЯСЙ ржПржЦрж╛ржирзЗ Closure message ржХрзЗ ржзрж░рзЗ рж░рзЗржЦрзЗржЫрзЗ, ржпржжрж┐ржУ delayedMessage() ржПржХрзНрж╕рж┐ржХрж┐ржЙрж╢ржи рж╢рзЗрж╖ рж╣рзЯрзЗ ржЧрзЗржЫрзЗ!

// ЁЯОп Closure ржирж┐рзЯрзЗ ржХрж┐ржЫрзБ Interview Questions:
// 1я╕ПтГг Closure ржХрзА? ржПржмржВ ржПржЯрж┐ ржХрзАржнрж╛ржмрзЗ ржХрж╛ржЬ ржХрж░рзЗ?
// 2я╕ПтГг Closure-ржПрж░ ржорж╛ржзрзНржпржорзЗ ржХрзАржнрж╛ржмрзЗ ржбрж╛ржЯрж╛ ржкрзНрж░рж╛ржЗржнрзЗржЯ рж░рж╛ржЦрж╛ ржпрж╛рзЯ?
// 3я╕ПтГг Closure ржХрзЛржерж╛рзЯ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рзЯ?
// 4я╕ПтГг Closure ржХрзАржнрж╛ржмрзЗ Memory Leak-ржПрж░ ржХрж╛рж░ржг рж╣рждрзЗ ржкрж╛рж░рзЗ?

// ЁЯФе рж╢рзЗрж╖ ржХржерж╛ (рж╕ржВржХрзНрж╖рзЗржкрзЗ)
// тЬЕ Closure рж╣рж▓рзЛ ржЗржиржирж╛рж░ ржлрж╛ржВрж╢ржи, ржпрж╛ рждрж╛рж░ ржкрзНржпрж╛рж░рзЗржирзНржЯ ржлрж╛ржВрж╢ржирзЗрж░ ржнрзЗрж░рж┐рзЯрзЗржмрж▓ ржПржХрзНрж╕рзЗрж╕ ржХрж░рждрзЗ ржкрж╛рж░рзЗ, ржПржоржиржХрж┐ ржкрзНржпрж╛рж░рзЗржирзНржЯ ржлрж╛ржВрж╢ржи рж╢рзЗрж╖ рж╣рж▓рзЗржУ!
// тЬЕ ржПржЯрж┐ ржбрж╛ржЯрж╛ ржкрзНрж░рж╛ржЗржнрзЗржЯ рж░рж╛ржЦрждрзЗ, State Maintain ржХрж░рждрзЗ ржПржмржВ ржЕржирзЗржХ ржЬржЯрж┐рж▓ рж╕ржорж╕рзНржпрж╛рж░ рж╕ржорж╛ржзрж╛ржи ржХрж░рждрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рзЗред
// тЬЕ JavaScript-ржПрж░ Advanced Concepts ржмрзЛржЭрж╛рж░ ржЬржирзНржп ржПржЯрж┐ ржЦрзБржмржЗ ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг!

// ЁЯСЙ Closure ржмрзБржЭрждрзЗ ржкрж╛рж░рж▓рзЗ JavaScript-ржПрж░ Functional Programming ржЕржирзЗржХ ржнрж╛рж▓рзЛржнрж╛ржмрзЗ ржмрзБржЭрждрзЗ ржкрж╛рж░ржмрзЗ!